name: Build Image

on: 
  push:
  schedule: 
    - cron: '0 0 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    # - name: Install Dependencies
    #   run: |
    #     sudo apt update
    #     sudo apt install coreutils p7zip-full qemu-user-static

    # - name: Checkout CustomPiOS
    #   uses: actions/checkout@v2
    #   with:
    #     repository: 'mrbeam/CustomPiOS'
    #     path: CustomPiOS
    #     ref: 'mrbeam'

    # - name: Checkout git submodules
    #   uses: actions/checkout@v2
    #   with:
    #     repository: 'mrbeam/iobeam'
    #     token: ${{ secrets. }}
    #     path: iobeam
    #     ref: develop

    # - name: Checkout mount manager
    #   uses: actions/checkout@v2
    #   with:
    #     repository: 'mrbeam/mount_manager'
    #     ssh-key: "${{ secrets.AXEL_BITBUCK_SSH_KEY }}"
    #     path: mount_manager

    - name: Checkout Project Repository
      uses: actions/checkout@v2
      with:
        path: repository
        submodules: recursive
        token: ${{ secrets.PAT_READ }}

    - name: Download Raspbian Image
      run: |
        cd repository/src/image
        wget -c --trust-server-names 'https://downloads.raspberrypi.org/raspios_lite_armhf_latest'

    - name: Update CustomPiOS Paths
      run: |
        cd repository/src
        ../../CustomPiOS/src/update-custompios-paths

    - name: Create relevant SSH key
      run: |
        echo "${{ secrets.AXEL_BITBUCK_SSH_KEY }}" > repository/src/modules/beamos/filesystem/bitbucket_rsa
        chmod 600 repository/src/modules/beamos/filesystem/bitbucket_rsa

    - name: Force apt mirror to work around intermittent mirror hiccups
      run: |
        echo "OCTOPI_APTMIRROR=http://mirror.us.leaseweb.net/raspbian/raspbian" > repository/src/config.local

    - name: Build Image (MrBeam Variant)
      env:
        VARIANT: mrbeam
      run: |
        sudo modprobe loop
        cd repository/src
        sudo bash -x ./build_dist $VARIANT

    - name: Copy output
      env:
        VARIANT: mrbeam
      id: copy
      run: |
        source repository/src/config
        NOW=$(date +"%Y-%m-%d-%H%M")
        IMAGE=$NOW-octopi-$DIST_VERSION
        # When building a variant, it is built in workspace-$VARIANT
        if [ -n $VARIANT ]; then
          cp repository/src/workspace-$VARIANT/*.img $IMAGE.img
        else
          cp repository/src/workspace/*.img $IMAGE.img
        fi

        echo "::set-output name=image::$IMAGE"

    # artifact upload will take care of zipping for us
    - uses: actions/upload-artifact@v1
      # if: github.event_name == 'schedule'
      with:
        name: ${{ steps.copy.outputs.image }}
        path: ${{ steps.copy.outputs.image }}.img
