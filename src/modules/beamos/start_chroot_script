#!/usr/bin/env bash
# BeamOS generation script
# Helper script that runs in a Raspbian chroot to create the BeamOS distro
# Written by Axel Soll <axel@soll.xyz>
# GPL V3
########
set -x
set -e

export LC_ALL=C

source /common.sh

### Script ####

# octopi already updated the image to the latest version, rm'ed bloat packages and updated pip

enable_i2c() {
  # uncomment i2c_arm option
  sed -i 's/^# *\(dtparam=i2c_arm\)/\1/' /boot/config.txt
  # Enable I2C and set I2C baudrate if they are present in config
  if grep "i2c_arm=" /boot/config.txt &>/dev/null; then
    sed -i 's/\(i2c_arm=\)off/\1on/' /boot/config.txt
  else
    echo "dtparam=i2c_arm=on" >> /boot/config.txt
  fi

  if grep "i2c_arm_baudrate" /boot/config.txt &>/dev/null; then
    sed -i 's/\(i2c_arm_baudrate=\)[0-9]*/\1'"$BEAMOS_I2C_BAUDRATE"'/' /boot/config.txt
  else
    echo "dtparam=i2c_arm_baudrate=$BEAMOS_I2C_BAUDRATE" >> /boot/config.txt
  fi
  # Enable UART  AAAAND Bluetooth
  #echo "enable_uart=1" >> /boot/config.txt
}

add_mrb3() {
  echo "--- Installing Python3"
  # additional python3 packages (uncomment when needed +20sec)
  apt-get -y install python3 python3-venv python3-dev
  # create mrb virtual environments
  # TODO create mrb2 and mrb3 (python 2 and 3 versions)
  sudo -u pi python3.7 -m venv /home/pi/mrb3
}

OPRINT=/home/pi/oprint/bin

pip_install() {
  PIP_DEFAULT_TIMEOUT=60 sudo -u pi $OPRINT/pip install $@
  # --install-option="--jobs=$BEAMOS_JOBS"
}

pip_install_dev_or_rm() {
  # If in DEV mode, install with develop options and keep the repo
  # If not, install normally and remove the repo
  if [ "$BEAMOS_DEV" == "yes" ]; then
    pip_install -e $@
  else
    pip_install $@
    rm -rf $@
  fi
}

pushd /home/pi

  if [ "BEAMOS_COMPILE_OPENCV" == "yes" ]; then
    echo "Pulling $BEAMOS_OPENCV_VERSION"
    echo "Compiling OpenCV v.$BEAMOS_OPENCV_VERSION for python $PYTHON_VERSION -- This can take around an hour"
    # Following the pyimagesearch tutorial
    # https://www.pyimagesearch.com/2019/09/16/install-opencv-4-on-raspberry-pi-4-and-raspbian-buster/
    DEV_LIBS_OPENCV="libjpeg-dev libtiff5-dev libjasper-dev libpng-dev libavcodec-dev libavformat-dev libswscale-dev libv4l-dev libxvidcore-dev libx264-dev libatlas-base-dev gfortran libhdf5-dev libhdf5-serial-dev"
    sudo apt -y install $DEV_LIBS_OPENCV libhdf5-103
    # TODO finish up
    sudo apt -y remove $DEV_LIBS_OPENCV # save space
    
  else
    echo "--- Installing OpenCV from pip wheels ~ 10min because installs gtk"
    sudo apt -y install python-opencv
    # link the global library to the oprint environment
    ln -s /usr/lib/python2.7/dist-packages/cv2.arm-linux-gnueabihf.so /home/pi/oprint/lib/python2.7/cv2.so
    # Headless install (which fails)
    # PIP_DEFAULT_TIMEOUT=60 sudo -u pi $OPRINT/pip install opencv-python-headless
    # Install the opencv wheel available for raspberry (also fails)
    # PIP_DEFAULT_TIMEOUT=60 sudo -u pi /home/pi/oprint/bin/pip install opencv-python #opencv-contrib-python-nonfree-headless
  fi
  if [ "$BEAMOS_INCLUDE_MRBEAMPLUGIN" == "yes" ]
  then
    echo "--- Installing MrBeamPlugin"
    # Library dependencies for PIL
    sudo apt -y install libxml2  libjpeg9
    # TODO rm install of numpy here
    # picamera needs to check /proc/cpuinfo at install time to figure out which model it's used with.
    cp /filesystem/picamera/cpuinfo.pi3bp /proc/cpuinfo

    gitclone BEAMOS_MRBEAMPLUGIN_REPO OctoPrint-MrBeam
    pip_install_dev_or_rm ./OctoPrint-MrBeam

    rm /proc/cpuinfo
  fi
  if [ "$BEAMOS_INCLUDE_IOBEAM" == "yes" ]
  then
    echo "--- Installing IOBEAM"
    sudo apt -y install i2c-tools
    enable_i2c
    # iobeam is cloned as a submodule to /filesystem before running the script
    pip_install_dev_or_rm /filesystem/repos/iobeam
  fi
  if [ "$BEAMOS_INCLUDE_NETCONNECTD" == "yes" ]; then
    # TODO change when newest version of netconnectd comes out.
    apt-get -y install hostapd dnsmasq logrotate rfkill
    gitclone BEAMOS_NETCONNECTD_REPO netconnectd
    pip_install_dev_or_rm ./netconnectd
    sed -i 's/free: true/free: false/' /etc/netconnectd.yaml
    update-rc.d -f hostapd remove
    update-rc.d -f dnsmasq remove
    update-rc.d netconnectd defaults 98
  fi
  if [ "$BEAMOS_INCLUDE_MOUNTMANAGER" == "yes" ]
  then
    echo "--- Installing mount_manager"
    apt -y install gnupg
    unpack /filesystem/mount_manager/root / root
    unpack /filesystem/mount_manager/home /home/ pi
    echo 'ACTION=="add",SUBSYSTEM=="block",KERNEL=="sd*[!0-9]",TAG+="systemd",ENV{SYSTEMD_WANTS}="usb_mount_manager_add.service"' >> /lib/udev/rules.d/00-mount_manager.rules
    echo 'ACTION=="remove",SUBSYSTEM=="block",KERNEL=="sd*[!0-9]",RUN+="/bin/systemctl start --no-block usb_mount_manager_remove.service"' >> /lib/udev/rules.d/00-mount_manager.rules
    # Disable the udev rules for first boot and will be enabled again by the first_boot_script
    sudo ln -s /dev/null /etc/udev/rules.d/00-mount_manager.rules
    # mount manager was cloned as a submodule to /filesystem before running the script
    mv /filesystem/repos/mount_manager/mount_manager /usr/bin/
    chmod o+x /usr/bin/mount_manager
    chown root:root /usr/bin/mount_manager
    rm -rf usb_mount_manager
    # Add gpg public key under the pi user
    mkdir -p /home/pi/.config
    gpg -u "${BASE_USER}" --homedir /home/pi/.config/gnupg --import /usr/share/mount_manager/pubkey.asc
    # sudo -u "${BASE_USER}" gpg --import /usr/share/mount_manager/pubkey.asc
  fi
  if [ "$BEAMOS_INCLUDE_FINDMYMRBEAM" == "yes" ]
  then
    echo "--- Installing Find my MrBeam ..."
    pip_install $BEAMOS_FINDMYMRBEAM_ARCHIVE
  fi
  if [ "$BEAMOS_INCLUDE_SSH" == "yes" ]
  then
    # Redundant as octopi already enables sshd, but keep it to make sure.
    touch /boot/ssh
    # Add known_hosts for auto login with the mr beam credentials
    unpack /filesystem/ssh /home/pi/ pi
    # remove user password login
    passwd -d pi
  else
    rm /boot/ssh || echo "Auto sshd already disabled - /boot/ssh is not a file"
  fi
  if [ "$BEAMOS_DEV" == "yes" ]; then
    sudo apt -y install vim curl pkg-config
    # Adding Rust, personal choice...
  else
    rm .ssh/known_hosts
  fi
popd

# store beamos commit used to build this image
# (will be the same as the octopi commit version
echo "$BEAMOS_COMMIT" > /etc/beamos_commit

#cleanup
apt-get clean
apt-get autoremove -y

#####################################################################
### setup services

### IObeam

if [ "$BEAMOS_INCLUDE_IOBEAM" == "yes" ]
then
  systemctl_if_exists enable iobeam.service
# else
  # let's remove the configs for system services we don't need
  # rm /etc/systemd/system/iobeam.service
fi

### Netconnectd

if [ "$BEAMOS_INCLUDE_NETCONNECTD" == "yes" ]
then
  systemctl_if_exists enable netconnectd.service
# else
  # let's remove the configs for system services we don't need
  # rm /etc/systemd/system/netconnectd.service
fi
